--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -122,16 +122,9 @@ if(NOT EXE_SQLITE3)
   message(SEND_ERROR "sqlite3 binary not found!")
 endif()
 
-find_package(Sqlite3 REQUIRED)
-if(NOT SQLITE3_FOUND)
-  message(SEND_ERROR "sqlite3 dependency not found!")
-endif()
-
 # Would build and run with older versons, but with horrible performance
 # See https://github.com/OSGeo/PROJ/issues/1718
-IF("${SQLITE3_VERSION}" VERSION_LESS "3.11")
-  message(SEND_ERROR "sqlite3 >= 3.11 required!")
-ENDIF()
+# sqlite3 >= 3.11 ensured by conan
 
 ################################################################################
 # threading configuration
--- a/src/lib_proj.cmake
+++ b/src/lib_proj.cmake
@@ -311,7 +311,7 @@ source_group("Source Files\\Transformations"
 source_group("Source Files\\ISO19111"
   FILES ${SRC_LIBPROJ_ISO19111})
 
-include_directories(${CMAKE_SOURCE_DIR}/include)
+include_directories(${PROJ4_SOURCE_DIR}/include)
 
 include_directories(${CMAKE_CURRENT_BINARY_DIR})
 source_group("CMake Files" FILES CMakeLists.txt)
@@ -441,7 +441,7 @@ if(USE_THREAD AND Threads_FOUND AND CMAKE_USE_PTHREADS_INIT)
 endif()
 
 include_directories(${SQLITE3_INCLUDE_DIR})
-target_link_libraries(${PROJ_CORE_TARGET} ${SQLITE3_LIBRARY})
+target_link_libraries(${PROJ_CORE_TARGET} CONAN_PKG::sqlite3)
 
 if(MSVC AND BUILD_LIBPROJ_SHARED)
   target_compile_definitions(${PROJ_CORE_TARGET}
